/*
 * convolveQueue.h
 *
 *  Created on: Apr 23, 2016
 *      Author: Ben
 */

#ifndef SRC_CONVOLVEQUEUE_H_
#define SRC_CONVOLVEQUEUE_H_

/**
 * convolveQueue object
 * The convolve queue stores a left and right array of ints.
 * This queue is special because it allows for performing a
 * specialized convolve operation on the left and right arrays.
 */
typedef struct {
  unsigned int      left;  /* transmit/recieve object */
  unsigned int   	right;  /* buffer pool */
} convolveQueue;

/***************************************************
            Access Methods
***************************************************/

/** Initialize audio tx
 *    - get pointer to buffer pool
 *    - register interrupt handler
 *    - initialize TX queue

 * Parameters:
 * @param pThis  pointer to own object
 * @param pBuffP  pointer to buffer pool to take and return chunks from
 * @param pIsrDisp   pointer to interrupt dispatcher to get ISR registered
 *
 * @return Zero on success.
 * Negative value on failure.
 */
int convolveQueue_init(audioRxTx_t *pThis, bufferPool_d_t *pBuffP);

/** start audio tx
 *   - empthy for now
 * Parameters:
 * @param pThis  pointer to own object
 *
 * @return Zero on success.
 * Negative value on failure.
 */
int convolveQueue_push(audioRxTx_t *pThis);

/**
 * Allow the queue to pop an item off of each list.
 *
 * @return None
 */
void convolveQueue_pop();

/** audioRxTx put
 *   copies filled pChunk into the TX queue for transmission
 *    if queue is full, then chunk is dropped
 * Parameters:
 * @param pThis  pointer to own object
 *
 * @return Zero on success.
 * Negative value on failure.
 */
int convolveQueue_convolve();

#endif /* SRC_CONVOLVEQUEUE_H_ */
